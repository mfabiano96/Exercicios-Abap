*&---------------------------------------------------------------------*
*& Report Z_RELATORIO_MAT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT z_relatorio_mat.

*Relatório de Materiais por Categoria
*Será necessário criar um relatório que exibirá informações sobre materiais com base em uma categoria específica.

*Tela de Seleção
*A tela de seleção deverá conter um campo onde o usuário poderá inserir a categoria desejada dos materiais. Este campo deverá ser obrigatório.

*Seleção de Dados
*Após o usuário inserir a categoria e confirmar, o programa deve buscar os materiais da categoria desejada da tabela MARA (Tabela de Materiais) 
*com base no campo MTART (Tipo de Material). Com o MATNR (Número do Material), realizar busca na tabela MAKT (Descrições de Material) e 
*recuperar o valor do campo MAKTX (Descrição do Material).

*Estrutura do ALV
*- MARA-MATNR;
*- MARA-MTART;
*- MAKT-MAKTX;
*
TABLES: mara, makt.

TYPES: BEGIN OF ty_output, "Estrutura Tabela de Saída
         matnr TYPE mara-matnr,
         mtart TYPE mara-mtart,
         makt  TYPE makt-maktx,
       END OF ty_output.

DATA: it_output   TYPE TABLE OF ty_output, 
      it_fieldcat TYPE slis_t_fieldcat_alv.

DATA: wa_output   TYPE ty_output,
      wa_layout   TYPE slis_layout_alv,
      wa_fieldcat TYPE slis_fieldcat_alv.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.

  PARAMETERS: p_mat TYPE mara-matnr OBLIGATORY.

SELECTION-SCREEN END OF BLOCK b1.

START-OF-SELECTION.

  PERFORM  seleciona_dados.
  PERFORM: zf_estrutura_alv,
           zf_exibir_alv.

FORM seleciona_dados .
  SELECT a~matnr,
         a~mtart,
         b~maktx
        INTO TABLE @DATA(lt_dados)
  FROM mara AS a INNER JOIN makt AS b
       ON a~matnr = b~matnr
       WHERE a~matnr EQ @p_mat.

  SORT: lt_dados BY matnr.


  LOOP AT lt_dados INTO DATA(lw_dados).

    wa_output-matnr = lw_dados-matnr.
    wa_output-mtart = lw_dados-mtart.
    wa_output-makt = lw_dados-maktx.

    APPEND wa_output to it_output.

  ENDLOOP.

ENDFORM.

FORM zf_estrutura_alv .

CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'matnr'.
  wa_fieldcat-seltext_m = TEXT-r01.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'mtart'.
  wa_fieldcat-seltext_m = TEXT-r02.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'makt'.
  wa_fieldcat-seltext_m = TEXT-r03.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_layout-colwidth_optimize = abap_true. "Aumenta célula de acordo com a descrição.

ENDFORM.

FORM zf_exibir_alv .

   CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING

      is_layout               = wa_layout
      it_fieldcat             = it_fieldcat
    TABLES
      t_outtab                = it_output.

ENDFORM.